--total sales Dim=ALL
select [Measures].[Store Sales] on columns
from sales;

-- total store sales per DIM=store country (only if non-zero)
select [Measures].[Store Sales] on axis(0),
NONEMPTY([Store].[Geography].[Sales Country]) on axis(1)
from sales;
--total sales in south east california
select [Measures].[Store Sales] on columns,
 [Store].[Geography].[Sales Country].&[USA].&[South West].parent.parent.children on rows 
from sales;

--total sales in the month after January 1998

select [Measures].[Store Sales] on columns,
[Time].[DayMonthYear].[The Year].&[1998].&[Q1].&[February].lag(1) on rows
from sales;

-- total sales in USA to female customers
select [Measures].[Store Sales] on columns,
([Store].[Geography].[Sales Country].&[USA],
[Customer].[Gender].&[F], [Time].[DayMonthYear].[The Year].&[1998]) on rows
from sales;

-- total sales in USA & Mexico
select [Measures].[Store Sales] on columns,
{[Customer].[Geography].[Country].&[USA], 
[Customer].[Geography].[Country].&[Mexico]} on rows
from sales;

-- total sales for each year
select [Measures].[Store Sales] on columns,
NONEMPTY([Customer].[Geography].[Country]) on rows
from sales;

-- total sales for each year
select [Measures].[Store Sales] on columns,
NONEMPTY([Time].[DayMonthYear].[The Year]) on rows
from sales;

-- total sales for each month
select [Measures].[Store Sales] on columns,
NONEMPTY(([Time].[DayMonthYear].[The Year],
[Time].[The Month].[The Month])) on rows
from sales;

select [Measures].[Store Sales] on columns,
NONEMPTY(crossjoin([Time].[DayMonthYear].[The Year],
[Time].[The Month].[The Month])) on rows
from sales;

--total sales from Feb 1997 to July 1997
select [Measures].[Store Sales] on columns,
[Time].[DayMonthYear].[The Year].&[1997].&[Q1].&[February]:
[Time].[DayMonthYear].[The Year].&[1997].&[Q3].&[July] on rows
from sales;

-- sort results wrt the sale desc
select [Measures].[Store Sales] on columns,
order([Store].[Store Id].[Store Id], [Measures].[Store Sales], desc) on rows
from sales

-- return list of stores having store sale > 100000
select  [Measures].[Store Sales] on columns,
order(filter([Store].[Store Id].[Store Id], [Measures].[Store Sales]>100000),[Measures].[Store Sales], desc ) on rows
from sales

-- return the top k=5 stores wrt the store sale
select [Measures].[Store Sales] on columns,
topcount([Store].[Store Id].[Store Id], 2, [Measures].[Store Sales]) on rows
from sales

-- suppose that we do not have profit metric defined
-- Answer the query: profit distribution wrt the gender
with MEMBER profit_measure as
[Measures].[Store Sales]-[Measures].[Store Cost]
select {profit_measure, [Measures].[Store Sales], [Measures].[Store Cost]} on columns,
nonempty([Customer].[Gender].[Gender]) on rows
from sales 

--return the list of stores having top 10 profit value
with MEMBER profit_measure as
[Measures].[Store Sales]-[Measures].[Store Cost]
select profit_measure on columns,
topcount([Store].[Store Id].[Store Id], 10, [Measures].[Store Sales]) on rows
from sales

--return the top 5 customers wrt the profit value
with MEMBER profit_measure as
[Measures].[Store Sales]-[Measures].[Store Cost]
select profit_measure on columns,
topcount([Store].[Store Id].[Store Id], 5, [Measures].[Store Sales]) on rows
from sales

--return the list of stores with the information 
-- about the profit and the margin=profit/sale expressed by percentage
with MEMBER profit_measure as
[Measures].[Store Sales]-[Measures].[Store Cost]
member margin as 
profit_measure/[Measures].[Store Sales],
format_string="percent"
select {margin,profit_measure} on columns,
nonempty([Store].[Store Id].[Store Id]) on rows
from sales

-- percentage of sales over the year per months
with member sales_year as
([Time].[DayMonthYear].currentmember.parent.parent,[Measures].[Store Sales]) 
member perc as
[Measures].[Store Sales]/sales_year,
format_string="percent"
select {perc, sales_year, [Measures].[Store Sales]} on columns,
([Time].[The Year].[The Year],[Time].[DayMonthYear].[The Month]) on rows
from sales

-- running sales per month
with member running_sales as
sum(PERIODSTODATE([Time].[DayMonthYear].[The Year],
[Time].[DayMonthYear].currentmember),
[Measures].[Store Sales])
select {[Measures].[Store Sales], running_sales} on columns,
([Time].[The Year].[The Year],[Time].[DayMonthYear].[The Month])on rows
from sales

with member running_customer as
aggregate(PERIODSTODATE([Time].[DayMonthYear].[The Year],
[Time].[DayMonthYear].currentmember),
[Measures].[NCustomers])
member run_cust_sum as 
sum(PERIODSTODATE([Time].[DayMonthYear].[The Year],
[Time].[DayMonthYear].currentmember),
[Measures].[NCustomers])
select {[Measures].[Store Sales], running_customer,run_cust_sum } on columns,
([Time].[The Year].[The Year],[Time].[DayMonthYear].[The Month])on rows
from sales


with member running_cost as
aggregate(PERIODSTODATE([Time].[DayMonthYear].[The Year],
[Time].[DayMonthYear].currentmember),
[Measures].[Store Cost])
member run_cost_sum as 
sum(PERIODSTODATE([Time].[DayMonthYear].[The Year],
[Time].[DayMonthYear].currentmember),
[Measures].[Store Cost])
select {[Measures].[Store Sales], running_cost,run_cost_sum } on columns,
([Time].[The Year].[The Year],[Time].[DayMonthYear].[The Month])on rows
from sales








